{"version":3,"sources":["Container/Aside.tsx","Container/index.tsx","webpack:///./src/client.ts?b882","api.js","Footer/ClearCompleted.tsx","Footer/Counter.tsx","Footer/Filter.tsx","Footer/index.tsx","Input.tsx","List/Item.tsx","List/index.tsx","ToggleAll.tsx","App.tsx","index.tsx","Container/styles.module.css"],"names":["Aside","className","href","url","text","map","Container","children","styles","clientPromise","OpenAPIClientAxios","definition","init","getItemsRaw","client","putItemsRaw","postItemRaw","deleteItemsRaw","getItemRaw","putItemRaw","deleteItemRaw","putItems","response","data","postItem","deleteItems","putItem","deleteItem","create","id","useItemsRaw","refetchItems","useItems","item","_id","items","ClearCompleted","completedItems","filter","completed","length","onClick","Counter","Filter","path","title","activeClassName","exact","replace","to","Footer","Input","inputRef","useRef","ref","autoFocus","onKeyDown","key","input","current","value","trim","placeholder","type","Item","useState","focus","setFocus","isEditing","setIsEditing","handleSave","useEffect","clsx","onDoubleClick","checked","onChange","defaultValue","onBlur","List","useRouteMatch","params","listItems","Boolean","ToggleAll","every","htmlFor","App","Router","BrowserRouter","basename","homepage","fallback","window","location","pathname","endsWith","worker","start","serviceWorker","container","document","getElementById","ReactDOM","createRoot","hydrate","render","StrictMode","main","module","exports"],"mappings":"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","file":"static/js/main.2e8f48f6.chunk.js","sourcesContent":["export default function Aside() {\n  return (\n    <aside className=\"learn\">\n      <header>\n        <h3>@twoday/react-openapi-client-generator</h3>\n        <h5>Example</h5>\n        <a href=\"https://github.com/twoday-dev/twoday/tree/main/packages/react-openapi-client-generator/examples/todoapp\">\n          Source\n        </a>\n      </header>\n      <hr />\n      <h4>Official Resources</h4>\n      <ul>\n        {[\n          {\n            url: 'https://github.com/twoday-dev/twoday/tree/main/packages/react-openapi-client-generator',\n            text: '@twoday/react-openapi-client-generator',\n          },\n          {\n            url: 'https://github.com/twoday-dev/twoday/tree/main/packages/msw-openapi-backend-integration',\n            text: '@twoday/msw-openapi-backend-integration',\n          },\n          {\n            url: 'https://github.com/ArnoSaine/postinumero/tree/main/packages/use-async',\n            text: '@postinumero/use-async',\n          },\n          {\n            url: 'https://mswjs.io',\n            text: 'msw',\n          },\n          {\n            url: 'https://github.com/anttiviljami/openapi-backend',\n            text: 'openapi-backend',\n          },\n          {\n            url: 'https://github.com/anttiviljami/openapi-client-axios',\n            text: 'openapi-client-axios',\n          },\n        ].map(({ text, url }) => (\n          <li key={url}>\n            <a href={url}>{text}</a>\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n}\n","import Aside from './Aside';\nimport styles from './styles.module.css';\n\ntype Props = { children: React.ReactNode };\n\nexport default function Container({ children }: Props) {\n  return (\n    <div className={`learn-bar ${styles['learn-bar']}`}>\n      <Aside />\n      {children}\n    </div>\n  );\n}\n","import type {\n  OpenAPIClient,\n  Parameters,\n  UnknownParamsObject,\n  OperationResponse,\n  AxiosRequestConfig,\n} from 'openapi-client-axios';\nimport type { Document } from 'openapi-client-axios';\nimport { OpenAPIClientAxios } from 'openapi-client-axios';\nimport { create } from '@postinumero/use-async';\nimport definition from './TodoMVC-API.json';\n\nexport declare namespace Components {\n    namespace Schemas {\n        export interface Item {\n            _id?: string;\n            timestamp?: number;\n            title?: string;\n            completed?: boolean;\n        }\n        export type Items = Item[];\n    }\n}\nexport declare namespace Paths {\n    namespace DeleteItem {\n        namespace Parameters {\n            export type ItemId = string;\n        }\n        export interface PathParameters {\n            itemId: Parameters.ItemId;\n        }\n        namespace Responses {\n            export interface $200 {\n            }\n        }\n    }\n    namespace DeleteItems {\n        namespace Responses {\n            export interface $200 {\n            }\n        }\n    }\n    namespace GetItem {\n        namespace Parameters {\n            export type ItemId = string;\n        }\n        export interface PathParameters {\n            itemId: Parameters.ItemId;\n        }\n        namespace Responses {\n            export type $200 = Components.Schemas.Item;\n        }\n    }\n    namespace GetItems {\n        namespace Responses {\n            export type $200 = Components.Schemas.Items;\n        }\n    }\n    namespace PostItem {\n        namespace Responses {\n            export interface $201 {\n            }\n        }\n    }\n    namespace PutItem {\n        namespace Parameters {\n            export type ItemId = string;\n        }\n        export interface PathParameters {\n            itemId: Parameters.ItemId;\n        }\n        namespace Responses {\n            export interface $200 {\n            }\n        }\n    }\n    namespace PutItems {\n        namespace Responses {\n            export interface $200 {\n            }\n        }\n    }\n}\nexport interface OperationMethods {\n  /**\n   * getItems - List all items\n   */\n  'getItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.GetItems.Responses.$200>\n  /**\n   * putItems - Update a list of items\n   */\n  'putItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.PutItems.Responses.$200>\n  /**\n   * postItem - Create an item\n   */\n  'postItem'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.PostItem.Responses.$201>\n  /**\n   * deleteItems - Delete a list of items\n   */\n  'deleteItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.DeleteItems.Responses.$200>\n  /**\n   * getItem - Get an item by id\n   */\n  'getItem'(\n    parameters?: Parameters<Paths.GetItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.GetItem.Responses.$200>\n  /**\n   * putItem - Update an item\n   */\n  'putItem'(\n    parameters?: Parameters<Paths.PutItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.PutItem.Responses.$200>\n  /**\n   * deleteItem - Delete an item\n   */\n  'deleteItem'(\n    parameters?: Parameters<Paths.DeleteItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.DeleteItem.Responses.$200>\n}\n\nexport interface PathsDictionary {\n  ['/items']: {\n    /**\n     * getItems - List all items\n     */\n    'get'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.GetItems.Responses.$200>\n    /**\n     * postItem - Create an item\n     */\n    'post'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.PostItem.Responses.$201>\n    /**\n     * putItems - Update a list of items\n     */\n    'put'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.PutItems.Responses.$200>\n    /**\n     * deleteItems - Delete a list of items\n     */\n    'delete'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.DeleteItems.Responses.$200>\n  }\n  ['/items/{itemId}']: {\n    /**\n     * getItem - Get an item by id\n     */\n    'get'(\n      parameters?: Parameters<Paths.GetItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.GetItem.Responses.$200>\n    /**\n     * putItem - Update an item\n     */\n    'put'(\n      parameters?: Parameters<Paths.PutItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.PutItem.Responses.$200>\n    /**\n     * deleteItem - Delete an item\n     */\n    'delete'(\n      parameters?: Parameters<Paths.DeleteItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.DeleteItem.Responses.$200>\n  }\n}\n\nexport type Client = OpenAPIClient<OperationMethods, PathsDictionary>\n\n// Copied from the standard library and renamed to FunctionParameters\n// because the name Parameters clashes with openapi-client-axios.\n/**\n * Obtain the parameters of a function type in a tuple\n */\ntype FunctionParameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\n\nconst api = new OpenAPIClientAxios({ definition: definition as Document });\n\nexport const clientPromise = api.init<Client>();\n\nexport async function getItemsRaw(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const client = await clientPromise;\n  return await client['getItems'](...args);\n}\n\nexport async function putItemsRaw(...args: FunctionParameters<OperationMethods['putItems']>) {\n  const client = await clientPromise;\n  return await client['putItems'](...args);\n}\n\nexport async function postItemRaw(...args: FunctionParameters<OperationMethods['postItem']>) {\n  const client = await clientPromise;\n  return await client['postItem'](...args);\n}\n\nexport async function deleteItemsRaw(...args: FunctionParameters<OperationMethods['deleteItems']>) {\n  const client = await clientPromise;\n  return await client['deleteItems'](...args);\n}\n\nexport async function getItemRaw(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const client = await clientPromise;\n  return await client['getItem'](...args);\n}\n\nexport async function putItemRaw(...args: FunctionParameters<OperationMethods['putItem']>) {\n  const client = await clientPromise;\n  return await client['putItem'](...args);\n}\n\nexport async function deleteItemRaw(...args: FunctionParameters<OperationMethods['deleteItem']>) {\n  const client = await clientPromise;\n  return await client['deleteItem'](...args);\n}\n\nexport async function getItems(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const response = await getItemsRaw(...args);\n  return response.data;\n}\n\nexport async function putItems(...args: FunctionParameters<OperationMethods['putItems']>) {\n  const response = await putItemsRaw(...args);\n  return response.data;\n}\n\nexport async function postItem(...args: FunctionParameters<OperationMethods['postItem']>) {\n  const response = await postItemRaw(...args);\n  return response.data;\n}\n\nexport async function deleteItems(...args: FunctionParameters<OperationMethods['deleteItems']>) {\n  const response = await deleteItemsRaw(...args);\n  return response.data;\n}\n\nexport async function getItem(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const response = await getItemRaw(...args);\n  return response.data;\n}\n\nexport async function putItem(...args: FunctionParameters<OperationMethods['putItem']>) {\n  const response = await putItemRaw(...args);\n  return response.data;\n}\n\nexport async function deleteItem(...args: FunctionParameters<OperationMethods['deleteItem']>) {\n  const response = await deleteItemRaw(...args);\n  return response.data;\n}\n\nexport const [useItemsRaw, refetchItems, useItemsRawSafe] = create(getItemsRaw, { id: 'react-openapi-client-generator-getItems' });\n\nexport const [useItemRaw, refetchItem, useItemRawSafe] = create(getItemRaw, { id: 'react-openapi-client-generator-getItem' });\n\nexport function useItems(...args: FunctionParameters<OperationMethods['getItems']>) {\n  return useItemsRaw(...args).data;\n}\n\nexport function useItem(...args: FunctionParameters<OperationMethods['getItem']>) {\n  return useItemRaw(...args).data;\n}\n\nexport function useItemsSafe(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const [error, response] = useItemsRawSafe(...args)\n  return [error, response?.data];\n}\n\nexport function useItemSafe(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const [error, response] = useItemRawSafe(...args)\n  return [error, response?.data];\n}\n","import * as client from './client';\n\nexport * from './client';\n\nexport async function postItem(item) {\n  await client.postItem(null, item);\n  await client.refetchItems();\n}\n\nexport async function putItem(item) {\n  await client.putItem(item._id, item);\n  await client.refetchItems();\n}\n\nexport async function putItems(items) {\n  await client.putItems(null, items);\n  await client.refetchItems();\n}\n\nexport async function deleteItem(item) {\n  await client.deleteItem(item._id);\n  await client.refetchItems();\n}\n\nexport async function deleteItems(items) {\n  await client.deleteItems(\n    null,\n    items.map((item) => item._id)\n  );\n  await client.refetchItems();\n}\n\n// Poll API 😕 to get updates from other users and tabs\n//setInterval(() =>  client.refetchItems(), 5000);\n","import { useItems, deleteItems } from '../api';\n\nexport default function ClearCompleted() {\n  const items = useItems();\n  const completedItems = items.filter(({ completed }) => completed);\n  const { length } = completedItems;\n\n  return length ? (\n    <button\n      className=\"clear-completed\"\n      onClick={() => deleteItems(completedItems)}\n    >\n      Clear completed ({length})\n    </button>\n  ) : null;\n}\n","import { useItems } from '../api';\n\nexport default function Counter() {\n  const items = useItems();\n  const activeItems = items.filter(({ completed }) => !completed);\n  const { length } = activeItems;\n\n  return (\n    <span className=\"todo-count\">\n      {length} {length === 1 ? 'item' : 'items'} left\n    </span>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport default function Filter() {\n  return (\n    <ul className=\"filters\">\n      {[\n        { path: '', title: 'All' },\n        { path: 'active', title: 'Active' },\n        { path: 'completed', title: 'Completed' },\n      ].map(({ path, title }) => (\n        <li key={path}>\n          <NavLink activeClassName=\"selected\" exact replace to={`/${path}`}>\n            {title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useItems } from '../api';\nimport ClearCompleted from './ClearCompleted';\nimport Counter from './Counter';\nimport Filter from './Filter';\n\nexport default function Footer() {\n  const items = useItems();\n\n  return items.length ? (\n    <footer className=\"footer\">\n      <Counter />\n      <Filter />\n      <ClearCompleted />\n    </footer>\n  ) : null;\n}\n","import { useRef } from 'react';\nimport { postItem } from './api';\n\nexport default function Input() {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <input\n      ref={inputRef}\n      autoFocus\n      className=\"new-todo\"\n      onKeyDown={async ({ key }) => {\n        const input = inputRef.current;\n        if (input) {\n          const title = input.value.trim();\n          if (key === 'Enter' && title) {\n            await postItem({ title });\n            input.value = '';\n          }\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n      type=\"text\"\n    />\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { deleteItem, putItem } from '../api';\nimport { Components } from '../client';\n\ntype Props = { item: Components.Schemas.Item };\n\nexport default function Item({\n  item,\n  item: { completed = false, title },\n}: Props) {\n  const [focus, setFocus] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (focus) {\n      inputRef.current?.focus();\n      setFocus(false);\n    }\n  }, [focus, setFocus]);\n\n  function handleSave() {\n    if (isEditing) {\n      setIsEditing(false);\n      putItem({\n        ...item,\n        title: inputRef.current?.value.trim(),\n      });\n    }\n  }\n\n  return (\n    <li\n      className={clsx(completed && 'completed', isEditing && 'editing')}\n      onDoubleClick={() => {\n        setFocus(true);\n        setIsEditing(true);\n      }}\n    >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          checked={completed}\n          onChange={() =>\n            putItem({\n              ...item,\n              completed: !completed,\n            })\n          }\n          type=\"checkbox\"\n        />\n        <label>{title}</label>\n        <button className=\"destroy\" onClick={() => deleteItem(item)} />\n      </div>\n      <input\n        className=\"edit\"\n        ref={inputRef}\n        type=\"text\"\n        defaultValue={title}\n        onKeyDown={({ key }) => {\n          if (key === 'Enter') {\n            handleSave();\n          }\n        }}\n        onBlur={handleSave}\n      />\n    </li>\n  );\n}\n","import { useRouteMatch } from 'react-router-dom';\nimport { useItems } from '../api';\nimport Item from './Item';\n\nexport interface MatchParams {\n  filter: string;\n}\n\nexport default function List() {\n  const {\n    params: { filter },\n  } = useRouteMatch<MatchParams>('/:filter?') ?? { params: {} };\n\n  const items = useItems();\n\n  const listItems = filter\n    ? items.filter(\n        ({ completed }) => Boolean(completed) === (filter === 'completed')\n      )\n    : items;\n\n  return (\n    <ul className=\"todo-list\">\n      {listItems.map((item) => (\n        <Item key={item._id} item={item} />\n      ))}\n    </ul>\n  );\n}\n","import { useItems, putItems } from './api';\n\nexport default function ToggleAll() {\n  const items = useItems();\n\n  if (!items.length) {\n    return null;\n  }\n\n  const completed = items.every(({ completed }) => completed);\n\n  return (\n    <>\n      <input\n        data-testid=\"toggle-all\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={completed}\n        onChange={() =>\n          putItems(items.map((item) => ({ ...item, completed: !completed })))\n        }\n        type=\"checkbox\"\n      />\n      <label htmlFor=\"toggle-all\" />\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { homepage } from '../package.json';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Input from './Input';\nimport List from './List';\nimport ToggleAll from './ToggleAll';\n\nfunction App({ Router = BrowserRouter }) {\n  return (\n    <Router basename={process.env.NODE_ENV === 'test' ? undefined : homepage}>\n      <Suspense fallback=\"loading...\">\n        <Container>\n          <section className=\"todoapp\">\n            <header>\n              <h1>todos</h1>\n            </header>\n            <Input />\n            <section className=\"main\">\n              <ToggleAll />\n              <List />\n              <Footer />\n            </section>\n          </section>\n        </Container>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport 'todomvc-common/base.css';\nimport { homepage } from '../package.json';\nimport App from './App';\n\nasync function main() {\n  // if (\n  //   process.env.NODE_ENV === 'development' &&\n  //   globalThis.ENV.MOCK === 'msw'\n  // ) {\n  if (\n    window.location.pathname === homepage &&\n    !window.location.pathname.endsWith('/')\n  ) {\n    window.location.pathname = `${window.location.pathname}/`;\n    return;\n  }\n\n  const { worker } = await import('./mocks/browser');\n  await worker.start({\n    serviceWorker: {\n      url: `${homepage}/mockServiceWorker.js`,\n    },\n  });\n  // }\n\n  const container = document.getElementById('root');\n  // @ts-ignore\n  const root = ReactDOM.createRoot(container, { hydrate: true });\n\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\n\nmain();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learn-bar\":\"styles_learn-bar__3bpGf\"};"],"sourceRoot":""}